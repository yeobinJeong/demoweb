package com.demoweb.servlet;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@WebServlet("/upload/list.action")
public class UploadListServlet extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
		throws ServletException, IOException {
		
		//1. 로그인 여부 확인 (로그인 하지 않은 사용자는 로그인 화면으로 redirect))
		if (req.getSession().getAttribute("loginuser") == null) {
			resp.sendRedirect(
				"/demoweb/account/loginform.action?returnurl=" + req.getRequestURI());
			return;
		}
		
		//2. 목록 데이터 조회
		String file = req.getParameter("file");
		if (file == null || file.length() == 0) {
			resp.sendRedirect("/WEB-INF/views/upload/uploadlist.jsp");
			return;
		}

		// 2. 다운로드 처리
		// req.getServletContext() : jsp에서 사용한 application 객체 반환
		ServletContext application = req.getServletContext();
		String path = application.getRealPath("/WEB-INF/upload");

		// 응답 컨텐츠의 종류를 지정
		// resp.setContentType("application/octet-stream");
		resp.setContentType("application/unknown");

		// 다운로드되는 파일의 이름을 설정 파일의 이름을 설정 (다운로드 창에 표시될 이름)
		// utf-8 형식의 문자열을 iso-8859-1 형식의 문자열로 변경
		String f2 = new String(file.getBytes("utf-8"), "ISO-8859-1");
		f2 = f2.replace("+", "%20");// 위 처리는 공백을 +로 처리 -> +를 %20으로 변경

		resp.addHeader("Content-Disposition",
				// "attachment;filename=" + URLEncoder.encode(file, "utf-8"));
				"attachment;filename=\"" + f2 + "\"");

		// 파일을 응답 컨텐츠로 기록
		File f = new File(path, file);// path와 file을 이어서 경로를 구성
		FileInputStream fis = new FileInputStream(f);
		OutputStream os = resp.getOutputStream();
		while (true) {
			int data = fis.read(); // 파일에서 1byte 읽기
			if (data == -1)
				break; // 읽은 데이터가 없으면 중단
			os.write(data);// 응답에 1byte 쓰기
		}
		fis.close();
		os.close();
		
		//3. 조회된 데이터를 jsp에서 사용하도록 Request에 저장
		
		//4. 목록 보기 jsp로 forward
		RequestDispatcher dispatcher = 
			req.getRequestDispatcher("/WEB-INF/views/upload/uploadlist.jsp");
		dispatcher.forward(req, resp);
		
	}
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp)
		throws ServletException, IOException {
		
		req.setCharacterEncoding("utf-8");
		
		doGet(req, resp);
	}
	
}






